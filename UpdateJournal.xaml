<Activity mc:Ignorable="sap sap2010" x:Class="UpdateJournal" this:UpdateJournal.configInfo="[new Dictionary(of String,String)]" this:UpdateJournal.IncomingFundRecord="[new Dictionary(of String, List(of Dictionary(of String,String)))]" this:UpdateJournal.DepositKeyJournalDictionary="[new Dictionary(of String,String)]" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data" xmlns:str="clr-namespace:System.Text.RegularExpressions;assembly=System" xmlns:this="clr-namespace:" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="configInfo" Type="InArgument(scg:Dictionary(x:String, x:String))" />
    <x:Property Name="IncomingFundRecord" Type="InArgument(scg:Dictionary(x:String, scg:List(scg:Dictionary(x:String, x:String))))" />
    <x:Property Name="DepositKeyJournalDictionary" Type="InArgument(scg:Dictionary(x:String, x:String))" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>892.8,741.6</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>UpdateJournal_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="31">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Activities.DynamicUpdate</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>UiPath.Excel.Activities</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>System.Text.RegularExpressions</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="28">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>System.Collections.Immutable</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Flowchart DisplayName="UpdateJournal" sap:VirtualizedContainerService.HintSize="633.6,636.8" sap2010:WorkflowViewState.IdRef="Flowchart_1">
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <av:Point x:Key="ShapeLocation">270,2.5</av:Point>
        <av:Size x:Key="ShapeSize">60,75.2</av:Size>
        <av:PointCollection x:Key="ConnectorLocation">300,77.7 300,145.6</av:PointCollection>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <Flowchart.StartNode>
      <x:Reference>__ReferenceID1</x:Reference>
    </Flowchart.StartNode>
    <FlowStep x:Name="__ReferenceID1">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <av:Point x:Key="ShapeLocation">200,145.6</av:Point>
          <av:Size x:Key="ShapeSize">200,68.8</av:Size>
          <av:PointCollection x:Key="ConnectorLocation">300,214.4 300,305.6</av:PointCollection>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <Sequence DisplayName="Create Destination" sap:VirtualizedContainerService.HintSize="200,68.8" sap2010:WorkflowViewState.IdRef="Sequence_1">
        <Sequence.Variables>
          <Variable x:TypeArguments="x:Int32" Default="0" Name="count" />
        </Sequence.Variables>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <ui:InterruptibleWhile DisplayName="While" sap:VirtualizedContainerService.HintSize="654.4,2101.6" sap2010:WorkflowViewState.IdRef="InterruptibleWhile_1">
          <ui:InterruptibleWhile.Body>
            <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="619.2,1934.4" sap2010:WorkflowViewState.IdRef="Sequence_3">
              <Sequence.Variables>
                <Variable x:TypeArguments="x:String" Name="folderName" />
                <Variable x:TypeArguments="x:Boolean" Name="pathExist" />
                <Variable x:TypeArguments="x:Boolean" Name="folderDateNameExist" />
                <Variable x:TypeArguments="x:Boolean" Name="monthlyIncomingFundExis" />
              </Sequence.Variables>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:MessageBox Caption="{x:Null}" ChosenButton="{x:Null}" DisplayName="Message Box" sap:VirtualizedContainerService.HintSize="577.6,60" sap2010:WorkflowViewState.IdRef="MessageBox_4" Text="[IncomingFundRecord.Keys.Count]" />
              <Assign sap:VirtualizedContainerService.HintSize="577.6,60" sap2010:WorkflowViewState.IdRef="Assign_1">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:String">[folderName]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:String">[Convert.ToDateTime(IncomingFundRecord.Keys(count)).ToString("MMMM yyyy")]</InArgument>
                </Assign.Value>
              </Assign>
              <ui:PathExists DisplayName="Path Exists" Exists="[pathExist]" sap:VirtualizedContainerService.HintSize="577.6,90.4" sap2010:WorkflowViewState.IdRef="PathExists_1" Path="[configInfo(&quot;IncomingFundPath&quot;) + folderName]" PathType="Folder" />
              <If Condition="[pathExist]" sap:VirtualizedContainerService.HintSize="577.6,230.4" sap2010:WorkflowViewState.IdRef="If_1">
                <If.Else>
                  <ui:CreateDirectory ContinueOnError="{x:Null}" DisplayName="Create Folder" sap:VirtualizedContainerService.HintSize="333.6,80.8" sap2010:WorkflowViewState.IdRef="CreateDirectory_1" Path="[configInfo(&quot;IncomingFundPath&quot;) + folderName]" />
                </If.Else>
              </If>
              <ui:PathExists DisplayName="Path Exists" Exists="[folderDateNameExist]" sap:VirtualizedContainerService.HintSize="577.6,90.4" sap2010:WorkflowViewState.IdRef="PathExists_2" Path="[configInfo(&quot;IncomingFundPath&quot;) + folderName +&quot;\&quot;+ Convert.ToDateTime(IncomingFundRecord.Keys(count)).ToString(&quot;dd-MM-yyyy&quot;)]" PathType="Folder" />
              <If Condition="[folderDateNameExist]" sap:VirtualizedContainerService.HintSize="577.6,230.4" sap2010:WorkflowViewState.IdRef="If_2">
                <If.Else>
                  <ui:CreateDirectory ContinueOnError="{x:Null}" DisplayName="Create Folder" sap:VirtualizedContainerService.HintSize="333.6,80.8" sap2010:WorkflowViewState.IdRef="CreateDirectory_2" Path="[configInfo(&quot;IncomingFundPath&quot;) + folderName +&quot;\&quot;+ Convert.ToDateTime(IncomingFundRecord.Keys(count)).ToString(&quot;dd-MM-yyyy&quot;)]" />
                </If.Else>
              </If>
              <ui:MessageBox Caption="{x:Null}" ChosenButton="{x:Null}" DisplayName="Message Box" sap:VirtualizedContainerService.HintSize="577.6,60" sap2010:WorkflowViewState.IdRef="MessageBox_2" Text="[&quot;create deposit form&quot;]" />
              <ui:CopyFile ContinueOnError="{x:Null}" Destination="[configInfo(&quot;IncomingFundPath&quot;) + folderName +&quot;\&quot;+ Convert.ToDateTime(IncomingFundRecord.Keys(count)).ToString(&quot;dd-MM-yyyy&quot;) + &quot;\&quot; + &quot;Deposit Form - &quot; + DepositKeyJournalDictionary(IncomingFundRecord.Keys(count)) + &quot;.xlsx&quot;]" DisplayName="Copy File" sap:VirtualizedContainerService.HintSize="577.6,160" sap2010:WorkflowViewState.IdRef="CopyFile_1" Overwrite="True" Path="[configInfo(&quot;BaseDepositForm&quot;)]" />
              <ui:PathExists DisplayName="Path Exists" Exists="[monthlyIncomingFundExis]" sap:VirtualizedContainerService.HintSize="577.6,90.4" sap2010:WorkflowViewState.IdRef="PathExists_3" Path="[configInfo(&quot;IncomingFundPath&quot;) + folderName + &quot;\&quot; + &quot;Incoming Funds (&quot; + Convert.ToDateTime(IncomingFundRecord.Keys(count)).ToString(&quot;MMM yyyy&quot;)  + &quot;).xlsx&quot;]" PathType="File" />
              <If Condition="[monthlyIncomingFundExis]" sap:VirtualizedContainerService.HintSize="577.6,309.6" sap2010:WorkflowViewState.IdRef="If_8">
                <If.Else>
                  <ui:CopyFile ContinueOnError="{x:Null}" Destination="[configInfo(&quot;IncomingFundPath&quot;) + folderName + &quot;\&quot; + &quot;Incoming Funds (&quot; + Convert.ToDateTime(IncomingFundRecord.Keys(count)).ToString(&quot;MMM yyyy&quot;)  + &quot;).xlsx&quot;]" DisplayName="Copy File" sap:VirtualizedContainerService.HintSize="433.6,160" sap2010:WorkflowViewState.IdRef="CopyFile_2" Overwrite="False" Path="[configInfo(&quot;BaseIncomingFundMonthly&quot;)]" />
                </If.Else>
              </If>
              <Assign sap:VirtualizedContainerService.HintSize="577.6,60" sap2010:WorkflowViewState.IdRef="Assign_2">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:Int32">[count]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:Int32">[count + 1]</InArgument>
                </Assign.Value>
              </Assign>
            </Sequence>
          </ui:InterruptibleWhile.Body>
          <ui:InterruptibleWhile.Condition>
            <mva:VisualBasicValue x:TypeArguments="x:Boolean" ExpressionText="count &lt; IncomingFundRecord.Keys.Count" sap2010:WorkflowViewState.IdRef="VisualBasicValue`1_1" />
          </ui:InterruptibleWhile.Condition>
        </ui:InterruptibleWhile>
        <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="654.4,558.4" sap2010:WorkflowViewState.IdRef="CommentOut_1">
          <ui:CommentOut.Body>
            <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="452,480" sap2010:WorkflowViewState.IdRef="Sequence_4">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:ForEach x:TypeArguments="x:String" CurrentIndex="{x:Null}" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="410.4,387.2" sap2010:WorkflowViewState.IdRef="ForEach`1_1" Values="[IncomingFundRecord.Keys.ToArray]">
                <ui:ForEach.Body>
                  <ActivityAction x:TypeArguments="x:String">
                    <ActivityAction.Argument>
                      <DelegateInArgument x:TypeArguments="x:String" Name="item" />
                    </ActivityAction.Argument>
                    <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="375.2,252.8" sap2010:WorkflowViewState.IdRef="Sequence_2">
                      <Sequence.Variables>
                        <Variable x:TypeArguments="x:Boolean" Name="folderDateNameExist" />
                      </Sequence.Variables>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ui:MessageBox Caption="{x:Null}" ChosenButton="{x:Null}" DisplayName="Message Box" sap:VirtualizedContainerService.HintSize="333.6,60" sap2010:WorkflowViewState.IdRef="MessageBox_3" Text="[IncomingFundRecord.Keys(0)]" />
                      <ui:MessageBox Caption="{x:Null}" ChosenButton="{x:Null}" DisplayName="Message Box" sap:VirtualizedContainerService.HintSize="333.6,60" sap2010:WorkflowViewState.IdRef="MessageBox_1" Text="[folderName]" />
                    </Sequence>
                  </ActivityAction>
                </ui:ForEach.Body>
              </ui:ForEach>
            </Sequence>
          </ui:CommentOut.Body>
        </ui:CommentOut>
      </Sequence>
      <FlowStep.Next>
        <FlowStep x:Name="__ReferenceID0">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <av:Point x:Key="ShapeLocation">200,305.6</av:Point>
              <av:Size x:Key="ShapeSize">200,68.8</av:Size>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <Sequence DisplayName="Update Journal" sap:VirtualizedContainerService.HintSize="897.6,6135.2" sap2010:WorkflowViewState.IdRef="Sequence_6">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:ForEach x:TypeArguments="x:String" CurrentIndex="{x:Null}" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="856,6042.4" sap2010:WorkflowViewState.IdRef="ForEach`1_2" Values="[IncomingFundRecord.Keys]">
              <ui:ForEach.Body>
                <ActivityAction x:TypeArguments="x:String">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="x:String" Name="items" />
                  </ActivityAction.Argument>
                  <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="820.8,5908" sap2010:WorkflowViewState.IdRef="Sequence_5">
                    <Sequence.Variables>
                      <Variable x:TypeArguments="x:String" Name="destinationFilePath" />
                      <Variable x:TypeArguments="scg:List(scg:Dictionary(x:String, x:String))" Name="IncomingFundList" />
                      <Variable x:TypeArguments="x:String" Name="MonthlyIncomingFundPath" />
                    </Sequence.Variables>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ui:MultipleAssign DisplayName="Multiple Assign" sap:VirtualizedContainerService.HintSize="779.2,161.6" sap2010:WorkflowViewState.IdRef="MultipleAssign_1">
                      <ui:MultipleAssign.AssignOperations>
                        <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
                          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_1">
                            <ui:AssignOperation.To>
                              <OutArgument x:TypeArguments="x:String">[destinationFilePath]</OutArgument>
                            </ui:AssignOperation.To>
                            <ui:AssignOperation.Value>
                              <InArgument x:TypeArguments="x:String">[configInfo("IncomingFundPath") + Convert.ToDateTime(items).ToString("MMMM yyyy") + "\" + Convert.ToDateTime(items).ToString("dd-MM-yyyy") + "\Deposit Form - " + DepositKeyJournalDictionary(items) +".xlsx"]</InArgument>
                            </ui:AssignOperation.Value>
                          </ui:AssignOperation>
                          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_2">
                            <ui:AssignOperation.To>
                              <OutArgument x:TypeArguments="scg:List(scg:Dictionary(x:String, x:String))">[IncomingFundList]</OutArgument>
                            </ui:AssignOperation.To>
                            <ui:AssignOperation.Value>
                              <InArgument x:TypeArguments="scg:List(scg:Dictionary(x:String, x:String))">[IncomingFundRecord(items)]</InArgument>
                            </ui:AssignOperation.Value>
                          </ui:AssignOperation>
                          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_3">
                            <ui:AssignOperation.To>
                              <OutArgument x:TypeArguments="x:String">[MonthlyIncomingFundPath]</OutArgument>
                            </ui:AssignOperation.To>
                            <ui:AssignOperation.Value>
                              <InArgument x:TypeArguments="x:String">[configInfo("IncomingFundPath") + Convert.ToDateTime(items).ToString("MMMM yyyy") + "\" + "Incoming Funds (" + Convert.ToDateTime(items).ToString("MMM yyyy") + ").xlsx"]</InArgument>
                            </ui:AssignOperation.Value>
                          </ui:AssignOperation>
                        </scg:List>
                      </ui:MultipleAssign.AssignOperations>
                    </ui:MultipleAssign>
                    <ui:MessageBox Caption="{x:Null}" ChosenButton="{x:Null}" DisplayName="Message Box" sap:VirtualizedContainerService.HintSize="779.2,60" sap2010:WorkflowViewState.IdRef="MessageBox_5" Text="[MonthlyIncomingFundPath]" />
                    <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="Excel Application Scope" sap:VirtualizedContainerService.HintSize="779.2,3198.4" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_1" InstanceCachePeriod="3000" WorkbookPath="[destinationFilePath]">
                      <ui:ExcelApplicationScope.Body>
                        <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                          <ActivityAction.Argument>
                            <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                          </ActivityAction.Argument>
                          <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="745.6,3088.8" sap2010:WorkflowViewState.IdRef="Sequence_7">
                            <Sequence.Variables>
                              <Variable x:TypeArguments="sd:DataTable" Name="dt_depositrecord" />
                              <Variable x:TypeArguments="x:String" Name="cell" />
                              <Variable x:TypeArguments="s:String[]" Default="[{&quot;A&quot;,&quot;B&quot;,&quot;C&quot;,&quot;D&quot;,&quot;E&quot;,&quot;F&quot;,&quot;G&quot;,&quot;H&quot;,&quot;I&quot;,&quot;J&quot;}]" Name="columnCell" />
                            </Sequence.Variables>
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <ui:ExcelReadRange AddHeaders="True" DataTable="[dt_depositrecord]" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="704,60" sap2010:WorkflowViewState.IdRef="ExcelReadRange_1" SheetName="Deposit Record (1)">
                              <ui:ExcelReadRange.Range>
                                <InArgument x:TypeArguments="x:String">
                                  <Literal x:TypeArguments="x:String" Value="" />
                                </InArgument>
                              </ui:ExcelReadRange.Range>
                            </ui:ExcelReadRange>
                            <ui:ExcelWriteCell Cell="C10" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="704,88" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_14" SheetName="Deposit Record (1)" Text="[Now.ToString(&quot;dd/MM/yyyy&quot;)]" />
                            <ui:ExcelWriteCell Cell="G4" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="704,88" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_12" SheetName="Deposit Record (1)" Text="[DepositKeyJournalDictionary(items)]" />
                            <ui:ExcelWriteCell Cell="G9" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="704,88" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_13" SheetName="Deposit Record (1)" Text="[Convert.ToDateTime(items).ToString(&quot;dd/MM/yyyy&quot;)]" />
                            <ui:ForEachRow CurrentIndex="{x:Null}" DataTable="[dt_depositrecord]" DisplayName="For Each Row" sap:VirtualizedContainerService.HintSize="704,834.4" sap2010:WorkflowViewState.IdRef="ForEachRow_1">
                              <ui:ForEachRow.Body>
                                <ActivityAction x:TypeArguments="sd:DataRow">
                                  <ActivityAction.Argument>
                                    <DelegateInArgument x:TypeArguments="sd:DataRow" Name="row" />
                                  </ActivityAction.Argument>
                                  <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="560.8,685.6" sap2010:WorkflowViewState.IdRef="Sequence_9">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <If Condition="[row(0).ToString.Trim.ToLower.Equals(&quot;s/no&quot;)]" sap:VirtualizedContainerService.HintSize="519.2,592.8" sap2010:WorkflowViewState.IdRef="If_3">
                                      <If.Then>
                                        <Sequence sap:VirtualizedContainerService.HintSize="375.2,443.2" sap2010:WorkflowViewState.IdRef="Sequence_8">
                                          <Sequence.Variables>
                                            <Variable x:TypeArguments="scg:IEnumerable(str:Match)" Name="cellAddress" />
                                            <Variable x:TypeArguments="x:String" Name="cellRange" />
                                            <Variable x:TypeArguments="x:String" Name="variable1" />
                                          </Sequence.Variables>
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                          <ui:ExcelLookUpRange DisplayName="LookUp Range" sap:VirtualizedContainerService.HintSize="333.6,88" sap2010:WorkflowViewState.IdRef="ExcelLookUpRange_1" Result="[cellRange]" SheetName="Deposit Record (1)" Value="[row(0).ToString]">
                                            <ui:ExcelLookUpRange.Range>
                                              <InArgument x:TypeArguments="x:String">
                                                <Literal x:TypeArguments="x:String" Value="" />
                                              </InArgument>
                                            </ui:ExcelLookUpRange.Range>
                                          </ui:ExcelLookUpRange>
                                          <ui:Matches BuilderPattern="[0-9]\d*(.[0-9]\d+)?" sap:VirtualizedContainerService.HintSize="333.6,60" sap2010:WorkflowViewState.IdRef="Matches_1" Input="[cellRange]" IsBuilderTabModified="True" Model="[{&quot;Index&quot;:0,&quot;OperationID&quot;:&quot;LIT&quot;,&quot;OperationName&quot;:&quot;Literal&quot;,&quot;OperationValue&quot;:&quot;[0-9]\\d*(.[0-9]\\d+)?&quot;,&quot;QuantifierFirstValue&quot;:&quot;1&quot;,&quot;QuantifierID&quot;:&quot;EXT&quot;,&quot;QuantifierName&quot;:&quot;Exactly&quot;,&quot;QuantifierSecondValue&quot;:null}]" Pattern="[0-9]\d*(.[0-9]\d+)?" RegexOption="IgnoreCase" Result="[cellAddress]" />
                                          <Assign sap:VirtualizedContainerService.HintSize="333.6,60" sap2010:WorkflowViewState.IdRef="Assign_4">
                                            <Assign.To>
                                              <OutArgument x:TypeArguments="x:String">[cell]</OutArgument>
                                            </Assign.To>
                                            <Assign.Value>
                                              <InArgument x:TypeArguments="x:String">[cellAddress(0).ToString]</InArgument>
                                            </Assign.Value>
                                          </Assign>
                                          <ui:Break sap:VirtualizedContainerService.HintSize="333.6,22.4" sap2010:WorkflowViewState.IdRef="Break_1" />
                                        </Sequence>
                                      </If.Then>
                                    </If>
                                  </Sequence>
                                </ActivityAction>
                              </ui:ForEachRow.Body>
                            </ui:ForEachRow>
                            <Assign sap:VirtualizedContainerService.HintSize="704,60" sap2010:WorkflowViewState.IdRef="Assign_5">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:String">[cell]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:String">[(Convert.ToInt32(cell) + 1).ToString]</InArgument>
                              </Assign.Value>
                            </Assign>
                            <ui:ForEach x:TypeArguments="scg:Dictionary(x:String, x:String)" CurrentIndex="{x:Null}" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="704,1537.6" sap2010:WorkflowViewState.IdRef="ForEach`1_3" Values="[IncomingFundList]">
                              <ui:ForEach.Body>
                                <ActivityAction x:TypeArguments="scg:Dictionary(x:String, x:String)">
                                  <ActivityAction.Argument>
                                    <DelegateInArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" Name="IncomingFund" />
                                  </ActivityAction.Argument>
                                  <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="668.8,1403.2" sap2010:WorkflowViewState.IdRef="Sequence_10">
                                    <Sequence.Variables>
                                      <Variable x:TypeArguments="x:String" Name="cellTotal" />
                                    </Sequence.Variables>
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <ui:ExcelReadCell Cell="[&quot;G&quot; + cell]" DisplayName="Read Cell" sap:VirtualizedContainerService.HintSize="627.2,60" sap2010:WorkflowViewState.IdRef="ExcelReadCell_1" SheetName="Deposit Record (1)">
                                      <ui:ExcelReadCell.Result>
                                        <OutArgument x:TypeArguments="x:String">[cellTotal]</OutArgument>
                                      </ui:ExcelReadCell.Result>
                                    </ui:ExcelReadCell>
                                    <If Condition="[isNothing(cellTotal)]" sap:VirtualizedContainerService.HintSize="627.2,359.2" sap2010:WorkflowViewState.IdRef="If_4">
                                      <If.Else>
                                        <If Condition="[cellTotal.ToLower.Trim.Contains(&quot;total&quot;)]" sap:VirtualizedContainerService.HintSize="483.2,209.6" sap2010:WorkflowViewState.IdRef="If_7">
                                          <If.Then>
                                            <ui:ExcelInsertDeleteRows DisplayName="Insert/Delete Rows" sap:VirtualizedContainerService.HintSize="200,22.4" sap2010:WorkflowViewState.IdRef="ExcelInsertDeleteRows_1" Mode="Add" NoRows="1" Position="[Convert.ToInt32(cell)]" SheetName="Deposit Record (1)" />
                                          </If.Then>
                                        </If>
                                      </If.Else>
                                    </If>
                                    <ui:ForEach x:TypeArguments="x:String" CurrentIndex="{x:Null}" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="627.2,711.2" sap2010:WorkflowViewState.IdRef="ForEach`1_4" Values="[columnCell]">
                                      <ui:ForEach.Body>
                                        <ActivityAction x:TypeArguments="x:String">
                                          <ActivityAction.Argument>
                                            <DelegateInArgument x:TypeArguments="x:String" Name="item" />
                                          </ActivityAction.Argument>
                                          <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="538.4,576.8" sap2010:WorkflowViewState.IdRef="Sequence_12">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <Switch x:TypeArguments="x:String" DisplayName="Switch" Expression="[item]" sap:VirtualizedContainerService.HintSize="496.8,484" sap2010:WorkflowViewState.IdRef="Switch`1_1">
                                              <ui:ExcelWriteCell x:Key="A" Cell="[item+cell]" sap:VirtualizedContainerService.HintSize="333.6,88" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_1" SheetName="Deposit Record (1)" Text="[IncomingFund(&quot;S/N&quot;)]" />
                                              <ui:ExcelWriteCell x:Key="B" Cell="[item+cell]" sap:VirtualizedContainerService.HintSize="333.6,88" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_2" SheetName="Deposit Record (1)" Text="[IncomingFund(&quot;accountCode&quot;)]" />
                                              <ui:ExcelWriteCell x:Key="C" Cell="[item+cell]" sap:VirtualizedContainerService.HintSize="333.6,88" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_3" SheetName="Deposit Record (1)" Text="[IncomingFund(&quot;costCentre&quot;)]" />
                                              <ui:ExcelWriteCell x:Key="D" Cell="[item+cell]" sap:VirtualizedContainerService.HintSize="333.6,88" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_4" SheetName="Deposit Record (1)" Text="[IncomingFund(&quot;subAccountCode&quot;)]" />
                                              <ui:ExcelWriteCell x:Key="E" Cell="[item+cell]" sap:VirtualizedContainerService.HintSize="333.6,88" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_5" SheetName="Deposit Record (1)" Text="[IncomingFund(&quot;outputCode&quot;)]" />
                                              <ui:ExcelWriteCell x:Key="F" Cell="[item+cell]" sap:VirtualizedContainerService.HintSize="333.6,88" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_6" SheetName="Deposit Record (1)" Text="[IncomingFund(&quot;Description&quot;)]" />
                                              <Sequence x:Key="G" sap:VirtualizedContainerService.HintSize="524.8,552" sap2010:WorkflowViewState.IdRef="Sequence_11">
                                                <sap:WorkflowViewStateService.ViewState>
                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                  </scg:Dictionary>
                                                </sap:WorkflowViewStateService.ViewState>
                                                <If Condition="[(IncomingFund(&quot;mode&quot;).ToLower.Contains(&quot;i&quot;))]" sap:VirtualizedContainerService.HintSize="483.2,237.6" sap2010:WorkflowViewState.IdRef="If_5">
                                                  <If.Then>
                                                    <ui:ExcelWriteCell Cell="[item+cell]" sap:VirtualizedContainerService.HintSize="333.6,88" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_7" SheetName="Deposit Record (1)" Text="Interbank Transfers" />
                                                  </If.Then>
                                                </If>
                                                <If Condition="[(IncomingFund(&quot;mode&quot;).ToLower.Contains(&quot;c&quot;))]" sap:VirtualizedContainerService.HintSize="483.2,237.6" sap2010:WorkflowViewState.IdRef="If_6">
                                                  <If.Then>
                                                    <ui:ExcelWriteCell Cell="[item+cell]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="333.6,88" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_8" SheetName="Deposit Record (1)" Text="Cash" />
                                                  </If.Then>
                                                </If>
                                              </Sequence>
                                              <ui:ExcelWriteCell x:Key="H" Cell="[item+cell]" sap:VirtualizedContainerService.HintSize="333.6,88" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_9" SheetName="Deposit Record (1)" Text="[IncomingFund(&quot;amount&quot;)]" />
                                              <ui:ExcelWriteCell x:Key="I" Cell="[item+cell]" sap:VirtualizedContainerService.HintSize="333.6,88" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_10" SheetName="Deposit Record (1)" Text="[IncomingFund(&quot;gst&quot;)]" />
                                              <ui:ExcelWriteCell x:Key="J" Cell="[item+cell]" sap:VirtualizedContainerService.HintSize="333.6,88" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_11" SheetName="Deposit Record (1)" Text="[IncomingFund(&quot;totalAmount&quot;)]" />
                                            </Switch>
                                          </Sequence>
                                        </ActivityAction>
                                      </ui:ForEach.Body>
                                    </ui:ForEach>
                                    <Assign sap:VirtualizedContainerService.HintSize="627.2,60" sap2010:WorkflowViewState.IdRef="Assign_6">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="x:String">[cell]</OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="x:String">[(Convert.ToInt32(cell) + 1).ToString]</InArgument>
                                      </Assign.Value>
                                    </Assign>
                                  </Sequence>
                                </ActivityAction>
                              </ui:ForEach.Body>
                            </ui:ForEach>
                          </Sequence>
                        </ActivityAction>
                      </ui:ExcelApplicationScope.Body>
                    </ui:ExcelApplicationScope>
                    <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="Excel Application Scope" sap:VirtualizedContainerService.HintSize="779.2,2275.2" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_2" InstanceCachePeriod="3000" WorkbookPath="[MonthlyIncomingFundPath]">
                      <ui:ExcelApplicationScope.Body>
                        <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                          <ActivityAction.Argument>
                            <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                          </ActivityAction.Argument>
                          <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="692,2165.6" sap2010:WorkflowViewState.IdRef="Sequence_15">
                            <Sequence.Variables>
                              <Variable x:TypeArguments="sd:DataTable" Name="dt_monthlyIncomingFund" />
                              <Variable x:TypeArguments="x:String" Name="cell" />
                              <Variable x:TypeArguments="s:String[]" Default="[{&quot;A&quot;,&quot;B&quot;,&quot;C&quot;,&quot;D&quot;,&quot;E&quot;,&quot;F&quot;,&quot;G&quot;,&quot;H&quot;,&quot;I&quot;,&quot;J&quot;}]" Name="columnCell" />
                            </Sequence.Variables>
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <ui:ExcelReadRange AddHeaders="True" DataTable="[dt_monthlyIncomingFUnd]" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="650.4,60" sap2010:WorkflowViewState.IdRef="ExcelReadRange_2" SheetName="T2 Incoming and unknown fund">
                              <ui:ExcelReadRange.Range>
                                <InArgument x:TypeArguments="x:String">
                                  <Literal x:TypeArguments="x:String" Value="" />
                                </InArgument>
                              </ui:ExcelReadRange.Range>
                            </ui:ExcelReadRange>
                            <ui:ForEachRow CurrentIndex="{x:Null}" DataTable="[dt_monthlyIncomingFUnd]" DisplayName="For Each Row" sap:VirtualizedContainerService.HintSize="650.4,834.4" sap2010:WorkflowViewState.IdRef="ForEachRow_2">
                              <ui:ForEachRow.Body>
                                <ActivityAction x:TypeArguments="sd:DataRow">
                                  <ActivityAction.Argument>
                                    <DelegateInArgument x:TypeArguments="sd:DataRow" Name="row" />
                                  </ActivityAction.Argument>
                                  <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="560.8,685.6" sap2010:WorkflowViewState.IdRef="Sequence_14">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <If Condition="[row(0).ToString.ToLower.Trim.Contains(&quot;s/n&quot;)]" sap:VirtualizedContainerService.HintSize="519.2,592.8" sap2010:WorkflowViewState.IdRef="If_9">
                                      <If.Then>
                                        <Sequence sap:VirtualizedContainerService.HintSize="375.2,443.2" sap2010:WorkflowViewState.IdRef="Sequence_13">
                                          <Sequence.Variables>
                                            <Variable x:TypeArguments="x:String" Name="cellRange" />
                                            <Variable x:TypeArguments="scg:IEnumerable(str:Match)" Name="cellAddress" />
                                          </Sequence.Variables>
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                          <ui:ExcelLookUpRange DisplayName="LookUp Range" sap:VirtualizedContainerService.HintSize="333.6,88" sap2010:WorkflowViewState.IdRef="ExcelLookUpRange_2" Result="[cellRange]" SheetName="T2 Incoming and unknown fund" Value="[row(0).ToString]">
                                            <ui:ExcelLookUpRange.Range>
                                              <InArgument x:TypeArguments="x:String">
                                                <Literal x:TypeArguments="x:String" Value="" />
                                              </InArgument>
                                            </ui:ExcelLookUpRange.Range>
                                          </ui:ExcelLookUpRange>
                                          <ui:Matches BuilderPattern="[0-9]\d*(.[0-9]\d+)?" sap:VirtualizedContainerService.HintSize="333.6,60" sap2010:WorkflowViewState.IdRef="Matches_2" Input="[cellRange]" IsBuilderTabModified="True" Model="[{&quot;Index&quot;:0,&quot;OperationID&quot;:&quot;LIT&quot;,&quot;OperationName&quot;:&quot;Literal&quot;,&quot;OperationValue&quot;:&quot;[0-9]\\d*(.[0-9]\\d+)?&quot;,&quot;QuantifierFirstValue&quot;:&quot;1&quot;,&quot;QuantifierID&quot;:&quot;EXT&quot;,&quot;QuantifierName&quot;:&quot;Exactly&quot;,&quot;QuantifierSecondValue&quot;:null}]" Pattern="[0-9]\d*(.[0-9]\d+)?" RegexOption="IgnoreCase" Result="[cellAddress]" />
                                          <Assign sap:VirtualizedContainerService.HintSize="333.6,60" sap2010:WorkflowViewState.IdRef="Assign_7">
                                            <Assign.To>
                                              <OutArgument x:TypeArguments="x:String">[cell]</OutArgument>
                                            </Assign.To>
                                            <Assign.Value>
                                              <InArgument x:TypeArguments="x:String">[cellAddress(0).ToString]</InArgument>
                                            </Assign.Value>
                                          </Assign>
                                          <ui:Break sap:VirtualizedContainerService.HintSize="333.6,22.4" sap2010:WorkflowViewState.IdRef="Break_2" />
                                        </Sequence>
                                      </If.Then>
                                    </If>
                                  </Sequence>
                                </ActivityAction>
                              </ui:ForEachRow.Body>
                            </ui:ForEachRow>
                            <Assign sap:VirtualizedContainerService.HintSize="650.4,60" sap2010:WorkflowViewState.IdRef="Assign_8">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:String">[cell]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:String">[(Convert.ToInt32(cell) + 1).ToString]</InArgument>
                              </Assign.Value>
                            </Assign>
                            <ui:ForEach x:TypeArguments="scg:Dictionary(x:String, x:String)" CurrentIndex="{x:Null}" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="650.4,998.4" sap2010:WorkflowViewState.IdRef="ForEach`1_6" Values="[IncomingFundList]">
                              <ui:ForEach.Body>
                                <ActivityAction x:TypeArguments="scg:Dictionary(x:String, x:String)">
                                  <ActivityAction.Argument>
                                    <DelegateInArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" Name="incomingFund" />
                                  </ActivityAction.Argument>
                                  <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="615.2,864" sap2010:WorkflowViewState.IdRef="Sequence_17">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <ui:ExcelInsertDeleteRows DisplayName="Insert/Delete Rows" sap:VirtualizedContainerService.HintSize="573.6,22.4" sap2010:WorkflowViewState.IdRef="ExcelInsertDeleteRows_2" Mode="Add" NoRows="1" Position="[Convert.ToInt32(cell)]" SheetName="T2 Incoming and unknown fund" />
                                    <ui:ExcelSetRangeColor Color="[System.Drawing.ColorTranslator.FromHtml(&quot;#fff2cc&quot;)]" DisplayName="Set Range Color" sap:VirtualizedContainerService.HintSize="573.6,22.4" sap2010:WorkflowViewState.IdRef="ExcelSetRangeColor_1" Range="[&quot;A&quot;+cell +&quot;:&quot; + &quot;M&quot;+cell]" SheetName="T2 Incoming and unknown fund" />
                                    <ui:ForEach x:TypeArguments="x:String" CurrentIndex="{x:Null}" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="573.6,646.4" sap2010:WorkflowViewState.IdRef="ForEach`1_5" Values="[columnCell]">
                                      <ui:ForEach.Body>
                                        <ActivityAction x:TypeArguments="x:String">
                                          <ActivityAction.Argument>
                                            <DelegateInArgument x:TypeArguments="x:String" Name="item" />
                                          </ActivityAction.Argument>
                                          <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="538.4,512" sap2010:WorkflowViewState.IdRef="Sequence_16">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <Switch x:TypeArguments="x:String" DisplayName="Switch" Expression="[item]" sap:VirtualizedContainerService.HintSize="496.8,419.2" sap2010:WorkflowViewState.IdRef="Switch`1_2">
                                              <ui:ExcelWriteCell x:Key="A" Cell="[item+cell]" sap:VirtualizedContainerService.HintSize="333.6,88" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_15" SheetName="T2 Incoming and unknown fund" Text="[incomingFund(&quot;S/N&quot;)]" />
                                              <ui:ExcelWriteCell x:Key="B" Cell="[item+cell]" sap:VirtualizedContainerService.HintSize="333.6,88" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_16" SheetName="T2 Incoming and unknown fund" Text="[IncomingFund(&quot;mode&quot;)]" />
                                              <ui:ExcelWriteCell x:Key="C" Cell="[item+cell]" sap:VirtualizedContainerService.HintSize="333.6,88" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_17" SheetName="T2 Incoming and unknown fund" Text="[Convert.ToDateTime(items).ToString(&quot;MM/dd/yyyy&quot;)]" />
                                              <ui:ExcelWriteCell x:Key="D" Cell="[item+cell]" sap:VirtualizedContainerService.HintSize="333.6,88" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_18" SheetName="T2 Incoming and unknown fund" Text="[IncomingFund(&quot;accountCode&quot;)]" />
                                              <ui:ExcelWriteCell x:Key="E" Cell="[item+cell]" sap:VirtualizedContainerService.HintSize="333.6,88" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_19" SheetName="T2 Incoming and unknown fund" Text="[IncomingFund(&quot;costCentre&quot;)]" />
                                              <ui:ExcelWriteCell x:Key="F" Cell="[item+cell]" sap:VirtualizedContainerService.HintSize="333.6,88" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_20" SheetName="T2 Incoming and unknown fund" Text="[IncomingFund(&quot;subAccountCode&quot;)]" />
                                              <ui:ExcelWriteCell x:Key="G" Cell="[item+cell]" sap:VirtualizedContainerService.HintSize="333.6,88" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_21" SheetName="T2 Incoming and unknown fund" Text="[IncomingFund(&quot;outputCode&quot;)]" />
                                              <ui:ExcelWriteCell x:Key="H" Cell="[item+cell]" sap:VirtualizedContainerService.HintSize="333.6,88" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_22" SheetName="T2 Incoming and unknown fund" Text="[IncomingFund(&quot;Description&quot;)]" />
                                              <ui:ExcelWriteCell x:Key="I" Cell="[item+cell]" sap:VirtualizedContainerService.HintSize="333.6,88" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_23" SheetName="T2 Incoming and unknown fund" Text="[IncomingFund(&quot;vendorDetail&quot;)]" />
                                              <ui:ExcelWriteCell x:Key="J" Cell="[item+cell]" sap:VirtualizedContainerService.HintSize="333.6,88" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_24" SheetName="T2 Incoming and unknown fund" Text="[IncomingFund(&quot;amount&quot;)]" />
                                              <ui:ExcelWriteCell x:Key="K" Cell="[item+cell]" sap:VirtualizedContainerService.HintSize="333.6,88" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_25" SheetName="T2 Incoming and unknown fund" Text="[IncomingFund(&quot;gst&quot;)]" />
                                              <ui:ExcelWriteCell x:Key="L" Cell="[item+cell]" sap:VirtualizedContainerService.HintSize="333.6,88" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_26" SheetName="T2 Incoming and unknown fund" Text="[IncomingFund(&quot;totalAmount&quot;)]" />
                                              <ui:ExcelWriteCell x:Key="M" Cell="[item+cell]" sap:VirtualizedContainerService.HintSize="333.6,88" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_27" SheetName="T2 Incoming and unknown fund" Text="[IncomingFund(&quot;email&quot;)]" />
                                            </Switch>
                                          </Sequence>
                                        </ActivityAction>
                                      </ui:ForEach.Body>
                                    </ui:ForEach>
                                  </Sequence>
                                </ActivityAction>
                              </ui:ForEach.Body>
                            </ui:ForEach>
                          </Sequence>
                        </ActivityAction>
                      </ui:ExcelApplicationScope.Body>
                    </ui:ExcelApplicationScope>
                  </Sequence>
                </ActivityAction>
              </ui:ForEach.Body>
            </ui:ForEach>
          </Sequence>
        </FlowStep>
      </FlowStep.Next>
    </FlowStep>
    <x:Reference>__ReferenceID0</x:Reference>
  </Flowchart>
</Activity>